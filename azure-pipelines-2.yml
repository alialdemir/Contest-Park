# Xamarin.iOS
# Build a Xamarin.iOS project.
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- master

pool:
  vmImage: 'macos-latest'


steps:
# To manually select a Xamarin SDK version on the Microsoft-hosted macOS agent,
# configure this task with the *Mono* version that is associated with the
# Xamarin SDK version that you need, and set the "enabled" property to true.
# See https://go.microsoft.com/fwlink/?linkid=871629
- script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 5_12_0
  displayName: 'Select the Xamarin SDK version'
  enabled: false

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/ContestPark.Mobile.sln'
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'Certificates.p12'
- task: DownloadSecureFile@1
  inputs:
    secureFile: 'ContestPark_Provisioning.mobileprovision'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'ContestPark_Provisioning.mobileprovision'
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'Certificates.p12'
    certPwd: '$(IosKeyCerPassword)'
    keychain: 'temp'
- task: XamariniOS@2
  inputs:
    solutionFile: 'src/Mobile Apps/ContestPark.Mobile/ContestPark.Mobile.iOS/ContestPark.Mobile.iOS.csproj'
    configuration: 'Release'
    packageApp: true
    runNugetRestore: true
    signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
    signingProvisioningProfileID: '$(APPLE_PROV_PROFILE_UUID)'
- task: AppStoreRelease@1
  inputs:
    serviceEndpoint: 'Apple Store Service'
    appIdentifier: 'com.contestpark.app'
    appType: 'iOS'
    ipaPath: 'src/Mobile Apps/ContestPark.Mobile/ContestPark.Mobile.iOS/bin/iPhone/Release/*.ipa'
    releaseTrack: 'TestFlight'
    releaseNotes: 'CD/CI test'

