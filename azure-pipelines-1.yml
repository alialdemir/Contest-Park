# Xamarin.Android
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- master

pool:
  vmImage: 'macos-latest'

variables:
  buildConfiguration: 'Release'
  outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/ContestPark.Mobile.sln'
- task: android-manifest-version@1
  inputs:
    sourcePath: 'src/Mobile Apps/ContestPark.Mobile/ContestPark.Mobile.Android/Properties/AndroidManifest.xml'
    versionCodeOption: 'buildid'
    versionCode: '$(Build.BuildId)'
    printFile: true
- task: MSBuild@1
  inputs:
    solution: 'src/Mobile Apps/ContestPark.Mobile/ContestPark.Mobile.Android/ContestPark.Mobile.Android.csproj'
    msbuildArchitecture: 'x64'
    platform: 'AnyCPU'
    configuration: '$(BuildConfiguration)'
    msbuildArguments: '-t:SignAndroidPackage -p:AndroidPackageFormat=aab -p:Configuration=$(BuildConfiguration) -p:AndroidKeyStore=True -p:AndroidSigningKeyStore=myRelease.keystore -p:AndroidSigningStorePass=$(KeyStorePassword) -p:AndroidSigningKeyAlias=$(KeyStoreAlias) -p:AndroidSigningKeyPass=$(KeyStorePassword)'
- task: AndroidSigning@3
  inputs:
    apkFiles: '$(build.binariesdirectory)/$(BuildConfiguration)/*.apk'
    apksignerKeystoreFile: 'myRelease.keystore'
    apksignerKeystorePassword: '$(KeyStorePassword)'
    apksignerKeystoreAlias: '$(KeyStoreAlias)'
    apksignerKeyPassword: '$(KeyStorePassword)'
    apksignerArguments: '--verbose'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.binariesdirectory)/$(BuildConfiguration)'
    ArtifactName: 'drop'
    publishLocation: 'Container'