version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
    commands:
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - $(aws ecr get-login --no-include-email --region eu-central-1)
  pre_build:
    commands:
      - echo Build started on `date`
      - docker-compose -f docker-compose.yml -f docker-compose.prod.yml build
      - echo docker is build finish...
      - echo Started container tag...
      - docker tag contestparkbalance.api:latest $REPOSITORY_URI/balance-api:$IMAGE_TAG
      - docker tag contestparkfollow.api:latest $REPOSITORY_URI/follow-api:$IMAGE_TAG
      - docker tag contestparkcategory.api:latest $REPOSITORY_URI/category-api:$IMAGE_TAG
      - docker tag contestparkchat.api:latest $REPOSITORY_URI/chat-api:$IMAGE_TAG
      - docker tag contestparkduel.api:latest $REPOSITORY_URI/duel-api:$IMAGE_TAG
      - docker tag contestparkidentity.api:latest $REPOSITORY_URI/identity-api:$IMAGE_TAG
      - docker tag contestparkocelotapigw.api:latest $REPOSITORY_URI/ocelot-apigw:$IMAGE_TAG
      - docker tag contestparkpost.api:latest $REPOSITORY_URI/post-api:$IMAGE_TAG
      - docker tag contestparkadmin.api:latest $REPOSITORY_URI/admin-api:$IMAGE_TAG
      - docker tag contestparkbackgroundtasks:latest $REPOSITORY_URI/backgroundtasks:$IMAGE_TAG
      - docker tag contestparksignalr.api:latest $REPOSITORY_URI/signalr-api:$IMAGE_TAG
      - docker tag contestparknotification.api:latest $REPOSITORY_URI/notification-api:$IMAGE_TAG
      - docker tag contestparkmission.api:latest $REPOSITORY_URI/mission-api:$IMAGE_TAG
  build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI/balance-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/follow-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/category-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/chat-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/duel-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/identity-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/ocelot-apigw:$IMAGE_TAG
      - docker push $REPOSITORY_URI/post-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/admin-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/backgroundtasks:$IMAGE_TAG
      - docker push $REPOSITORY_URI/signalr-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/notification-api:$IMAGE_TAG
      - docker push $REPOSITORY_URI/mission-api:$IMAGE_TAG
      - echo Pushing end...
      - echo image path replace
      - sed -i 's/$(CONTESTPARK_AZURE_SERVICE_BUS)/'"\""$CONTESTPARK_AZURE_SERVICE_BUS"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_AWS_LOG_GROUP_NAME)/'"\""$CONTESTPARK_AWS_LOG_GROUP_NAME"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_GIFT_MONEY_AMOUNT)/'"\""$CONTESTPARK_GIFT_MONEY_AMOUNT"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_BET_COMISSION)/'"\""$CONTESTPARK_BET_COMISSION"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_SERVICE_BUS_PASSWORD)/'"\""$CONTESTPARK_SERVICE_BUS_PASSWORD"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_AZURE_REDIS_SIGNALR_DB)/'"\""$CONTESTPARK_AZURE_REDIS_SIGNALR_DB"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_ELASTIC_SEARCH_URI)/'"\""$CONTESTPARK_ELASTIC_SEARCH_URI"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_AWS_ACCESS_KEY_Id)/'"\""$CONTESTPARK_AWS_ACCESS_KEY_Id"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_MYSQL_CONNECTIONSTRING)/'"\""$CONTESTPARK_MYSQL_CONNECTIONSTRING"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_CLOUDFRONT_URL)/'"\""$CONTESTPARK_CLOUDFRONT_URL"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_AWS_SECRET_ACCESS_KEY)/'"\""$CONTESTPARK_AWS_SECRET_ACCESS_KEY"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_SERVICE_BUS_USERNAME)/'"\""$CONTESTPARK_SERVICE_BUS_USERNAME"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_SPOTIFY_CLIENTID)/'"\""$CONTESTPARK_SPOTIFY_CLIENTID"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_SPOTIFY_SECRETID)/'"\""$CONTESTPARK_SPOTIFY_SECRETID"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_AWS_SMS_KEY_ID)/'"\""$CONTESTPARK_AWS_SMS_KEY_ID"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_AWS_SMS_SECRET)/'"\""$CONTESTPARK_AWS_SMS_SECRET"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_ONE_SIGNAL_SEND_NOTIFICATION_URL)/'"\""$CONTESTPARK_ONE_SIGNAL_SEND_NOTIFICATION_URL"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_ONE_SIGNAL_APP_ID)/'"\""$CONTESTPARK_ONE_SIGNAL_APP_ID"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_ONE_SIGNAL_API_KEY)/'"\""$CONTESTPARK_ONE_SIGNAL_API_KEY"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(CONTESTPARK_APP_SPECIFIC_SHARED_SECRET)/'"\""$CONTESTPARK_APP_SPECIFIC_SHARED_SECRET"\""'/g' kubectl/deployment.yaml
      - sed -i 's/$(IMAGE_TAG)/'""$IMAGE_TAG""'/g' kubectl/deployment.yaml
      - sed -i 's/$(REPOSITORY_URI)/'""$REPOSITORY_URI""'/g' kubectl/deployment.yaml
      - echo update kubectl config
      - aws eks update-kubeconfig --name $CLUSTER_NAME
      - echo Kubernetes apply started
      - kubectl config current-context #make sure it's aws
      - kubectl apply -f kubectl/deployment.yaml
      - kubectl apply -f kubectl/deployment-services.yaml
      - echo Finish
   
      - printf '[{"name":"identity-api","imageUri":"%s"}]' $REPOSITORY_URI/identity-api:$IMAGE_TAG > imagedefinitions.json


artifacts:
    files:
        - imagedefinitions.json
