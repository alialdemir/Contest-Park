version: '3.4'

services:
  mysql-data:
    image: mysql:8.0.16
    volumes:
    - ./data:/var/lib/mysql
    restart: always

  redis.data:
    image: redis:alpine
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /mnt/xvdb/redis:/usr/local/etc/redis

  rabbitmq:
    image: rabbitmq:3-management-alpine

  elasticsearch:
    build:
      context: ek/elasticsearch/
    volumes:
      - ./ek/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"

  contestpark.identity.api:
    image: contestparkidentity.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
    build:
      context: .
      dockerfile: src/Services/Identity/ContestPark.Identity.API/Dockerfile

  contestpark.category.api:
    image: contestparkcategory.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
      - elasticsearch
    build:
      context: .
      dockerfile: src/Services/Category/ContestPark.Category.API/Dockerfile


  contestpark.follow.api:
    image: contestparkfollow.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
    build:
      context: .
      dockerfile: src/Services/Follow/ContestPark.Follow.API/Dockerfile
      

  contestpark.balance.api:
    image: contestparkbalance.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
    build:
      context: .
      dockerfile: src/Services/Balance/ContestPark.Balance.API/Dockerfile


  contestpark.ocelotapigw.api:
    image: contestparkocelotapigw.api:${TAG:-latest}
    depends_on:
      - contestpark.balance.api
      - contestpark.follow.api
      - contestpark.category.api
      - contestpark.identity.api
      - elasticsearch
      - mysql-data
    build:
      context: .
      dockerfile: src/ApiGateways/ContestPark.OcelotApiGw/Dockerfile
      

  contestpark.chat.api:
    image: contestparkchat.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
      - redis.data
    build:
      context: .
      dockerfile: src/Services/Chat/ContestPark.Chat.API/Dockerfile

  contestpark.signalr.api:
    image: contestparksignalr.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
      - contestpark.chat.api
    build:
      context: .
      dockerfile: src/Services/Signalr/ContestPark.Signalr.API/Dockerfile
      
  contestpark.post.api:
    image: contestparkpost.api:${TAG:-latest}
    depends_on:
      - mysql-data
      - rabbitmq
      - redis.data
    build:
      context: .
      dockerfile: src/Services/Post/ContestPark.Post.API/Dockerfile
      
  contestpark.duel.api:
    image: contestparkduel.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
      - redis.data
    build:
      context: .
      dockerfile: src/Services/Duel/ContestPark.Duel.API/Dockerfile
      
  contestpark.admin.api:
    image: contestparkadmin.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
    build:
      context: .
      dockerfile: src/Services/Admin/ContestPark.Admin.API/Dockerfile
      
  contestpark.backgroundtasks:
    image: contestparkbackgroundtasks:${TAG:-latest}
    depends_on:
      - rabbitmq
    build:
      context: .
      dockerfile: src/Services/BackgroundTask/ContestPark.BackgroundTasks/Dockerfile
      
  contestpark.notification.api:
    image: contestparknotification.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
    build:
      context: .
      dockerfile: src/Services/Notification/ContestPark.Notification.API/Dockerfile
      
  contestpark.mission.api:
    image: contestparkmission.api:${TAG:-latest}
    depends_on:
      - rabbitmq
      - mysql-data
    build:
      context: .
      dockerfile: src/Services/Mission/ContestPark.Mission.API/Dockerfile